data = """-8636587 2080107 -5940290
2591839 -6205427 -8768015
7916382 -1254797 1733997
3832518 5866193 7323692
-3676692 -6947795 3243244
1776011 -9884100 5391463
4218549 6133479 -7319155
-2599248 -769733 7095432
2935993 -4319604 7238976
1882547 -7287725 -7187386
1609556 -6867818 1113933
683778 2910989 -3289825
-1849368 1154547 -1679477
-2642134 -8086834 -236292
9877440 -5436249 7297821
-9081581 7024705 4267196
-2985448 -1637493 3379738
8592599 3032593 6447046
-6614971 -7060723 -3198540
9619162 -4480976 -1336487
-9192849 741430 -1420039
1513114 8560692 1061244
505696 3251755 9602716
-7500668 7942474 -7082781
-5978340 2962679 2997285
-7316240 8360795 -6814259
-7335622 -426381 1416052
-1802818 -6575021 6754169
2777459 6920884 -1439396"""

splitted_lines = data.split("\n")

lines_numbers = []


def get_pairs():
    for line in splitted_lines:
        numbers = line.split()
        tripairs = (int(numbers[0]), int(numbers[1]), int(numbers[2]))
        lines_numbers.append(tripairs)


def get_smallest_num():
    smallest_numbers = []
    for number1, number2, number3 in lines_numbers:
        smallest_numbers.append(min(number1, number2, number3))

    print(" ".join(map(str, smallest_numbers)))


if __name__ == "__main__":
    get_pairs()
    get_smallest_num()
